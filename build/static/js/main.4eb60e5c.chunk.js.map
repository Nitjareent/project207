{"version":3,"sources":["firebase/config.js","firebase/firebase.js","components/Navbar.jsx","components/Message.jsx","components/Comment.jsx","components/MessageList.jsx","components/Login.jsx","App.jsx","serviceWorker.js","index.js"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","initializeApp","Navbar","props","className","role","aria-label","href","id","username","onClick","logout","Message","date","data","timestamp","toDate","toString","text","delete","value","Comment","type","name","min","max","defaultValue","onChange","for","post","MessageList","image","result","messages","forEach","element","push","key","Login","e","firestore","collection","doc","state","currentUser","email","add","comment","Date","target","setState","onSubmit","preventDefault","password","auth","signInWithEmailAndPassword","then","response","user","catch","error","message","bind","onAuthStateChanged","onSnapshot","item","storage","ref","getDownloadURL","signOut","this","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.4eb60e5c.chunk.js","sourcesContent":["const config = {\n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASEURL,\n    projectId: process.env.REACT_APP_PROJECTID,\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n    appId: process.env.REACT_APP_APPID,\n    measurementId: process.env.REACT_APP_MEASUREMENTID\n }\n  \n export default config\n ","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\nimport config from './config'\n \nif (!firebase.apps.length) {\n   firebase.initializeApp(config)\n}\n \nexport default firebase","import React from 'react'\n \nfunction Navbar(props) {\n   return (\n       <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n           <div className=\"navbar-brand\">\n               <a className=\"navbar-item\" href=\"/\">\n               </a>\n           </div>\n           <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n               <div className=\"navbar-start\">\n \n               </div>\n               <div className=\"navbar-end\">\n                   <div className=\"navbar-item\">\n                       <div className=\"buttons\">\n                           <h3 className=\"navbar-item\">\n                               {props.username}\n                           </h3>\n                           <button className=\"button is-light\" onClick={props.logout}>\n                               Logout\n                           </button>\n                       </div>\n                   </div>\n               </div>\n           </div>\n       </nav>\n \n   )\n}\n \nexport default Navbar\n","import React from 'react'\n// import './node_modules/bulma/css/bulma.css'\n \nfunction Message(props) {\n \n   let date = props.data.timestamp.toDate()\n   return (\n       <article className=\"media\">\n           <figure className=\"media-left\">\n               <p className=\"image is-64x64\">\n               </p>\n           </figure>\n           <div className=\"media-content\">\n               <div className=\"content\">\n                   <p>\n                       <small>{date.toString()}</small>\n                       <br />\n                       {props.data.text}\n                   </p>\n               </div>\n           </div>\n           <div className=\"media-right\">\n               <button className=\"delete\" onClick={props.delete} value={props.id} >delete</button>\n           </div>\n       </article>\n   )\n}\n \nexport default Message","import React from 'react'\n \nfunction Comment(props) {\n   return (\n       <article className=\"media\">\n               <p className=\"image is-64x64\">\n                   \n               </p>\n           <dir className=\"media-content\">\n               <div className=\"check\">\n                   <p className=\"control\">\n                       <input type=\"number\"  id=\"1\" name=\"กระเพรา\" min=\"0\" max=\"99\" defaultValue=\"0\" onChange={props.onChange} />\n                       <label for=\"กระเพรา\">        ผัดกระเพรา จานละ 40</label>\n                   </p>\n               </div>\n               \n           </dir>\n           <p className=\"image is-64x64\">\n                   \n               </p>\n           <dir className=\"media-content\">\n               <div className=\"check\">\n                   <p className=\"control\">\n                       <input type=\"number\"  id=\"2\" name=\"กระเพรา\" min=\"0\" max=\"99\" defaultValue=\"0\" onChange={props.onChange} />   \n                       <label for=\"แกงกระหรี่\">       แกงกระหรี่ จานละ 50</label>\n                   </p>\n               </div>\n               \n           </dir>\n           <p className=\"image is-64x64\">\n                   \n               </p>\n           <dir className=\"media-content\">\n               <div className=\"check\">\n                   <p className=\"control\">\n                        <input type=\"number\"  id=\"3\" name=\"กระเพรา\" min=\"0\" max=\"99\" defaultValue=\"0\" onChange={props.onChange} />\n                       <label for=\"กระเพรา\">        ผัดกระเพรา จานละ 40</label>\n                   </p>\n               </div>\n               \n           </dir>\n           <p className=\"image is-64x64\">\n               </p>\n               \n           <dir className=\"media-content\">\n               <div className=\"check\">\n                   <p className=\"control\">\n                        <input type=\"number\"  id=\"4\" name=\"กระเพรา\" min=\"0\" max=\"99\" defaultValue=\"0\" onChange={props.onChange} />\n                       <label for=\"กระเพรา\">        ผัดกระเพรา จานละ 40</label>\n                   </p>\n               </div>\n               \n           </dir>\n\n           <nav className=\"level-right\">\n                   <div className=\"level-left\">\n                       <div className=\"level-item\">\n                           <button className=\"button is-info\" onClick={props.post}>Submit</button>\n                       </div>\n                   </div>\n               </nav>\n       </article>\n   )\n}\nexport default Comment\n","import React from 'react'\n// import './node_modules/bulma/css/bulma.css'\nimport Message from './Message'\nimport Comment from './Comment'\n \nfunction MessageList(props) {\n   return (\n       <section className=\"section container\">\n           <Comment image={props.image} onChange={props.onChange} post={props.post} />\n           {\n               (() => {\n                   let result = []\n                   props.messages.forEach((element) => {\n                       result.push(<Message image={props.image} key={element.id} id={element.id} data={element.data()} delete={props.delete} />)\n                   })\n                   return result\n               })()\n           }\n       </section>\n   )\n \n}\n \nexport default MessageList\n","import React from 'react'\n// import './node_modules/bulma/css/bulma.css'\nimport firebase from '../firebase/firebase'\nimport Navbar from './Navbar'\nimport MessageList from './MessageList'\n\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.state ={\n            email: '',\n            password: '',\n            messages: '',\n            currentUser: null,\n            image: '',\n            comment: ''\n        }\n        this.logout = this.logout.bind(this)\n    }\n\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user => {\n            if(user){\n                this.setState({\n                    currentUser: user\n                })\n                firebase.firestore().collection('users')\n                .doc(user.email)\n                .collection('messages')\n                .onSnapshot(item =>{\n                    this.setState({\n                        messages: item\n                    })\n                })\n                firebase.storage().ref('40510726_1885325624882038_6625989121489764352_n.jpg')\n                .getDownloadURL().then(response => this.setState({image: response}))\n            }\n        })\n    }\n\n    post = e => {\n        firebase.firestore()\n        .collection('users')\n        .doc(this.state.currentUser.email)\n        .collection('messages')\n        .add({\n            text: this.state.comment,\n            timestamp: new Date()\n        })\n\n    }\n\n    delete = e => {\n        firebase.firestore()\n        .collection('users')\n        .doc(this.state.currentUser.email)\n        .collection('messages')\n        .doc(e.target.value)\n        .delete()\n    }\n\n    onChange = e => {\n        const { name,value} = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    onSubmit = e => {\n        e.preventDefault()\n        const { email,password } = this.state\n        firebase.auth()\n           .signInWithEmailAndPassword(email, password)\n           .then(response => {\n               this.setState({\n                   currentUser: response.user\n               })\n           })\n           .catch(error => {\n               this.setState({\n                   message: error.message\n               })\n           })\n\n\n    }\n\n    logout(){\n        firebase.auth().signOut().then(response => {\n            this.setState({\n                currentUser: null\n            })\n        })\n    }\n\n    render(){\n        const { message, currentUser } = this.state\n        if (currentUser){\n            return(\n                <div>\n                    <Navbar logout={this.logout} username={currentUser.email}></Navbar>\n                    <MessageList\n                       image={this.state.image}\n                       messages={this.state.messages}\n                       onChange={this.onChange}\n                       post={this.post}\n                       delete={this.delete} />\n                </div>\n            )\n        }\n        return(\n            <section className=\"section container\">\n               <div className=\"columns is-centered\">\n                   <div className=\"column is-half\">\n                       <form onSubmit={this.onSubmit}> \n                           <div className=\"field\">\n                               <label className=\"label\">Email</label>\n                               <div className=\"control\">\n                                   <input className=\"input\" type=\"email\" name=\"email\" onChange={this.onChange} />\n                               </div>\n                           </div>\n                           <div className=\"field\">\n                               <label className=\"label\">\n                                   password\n                               </label>\n                               <div className=\"control\">\n                                   <input className=\"input\" type=\"password\" name=\"password\" onChange={this.onChange} />\n                               </div>\n                           </div>\n                                {message ? <p className=\"help is-danger\">{message}</p> : null}\n                           <div className=\"field is-grouped\">\n                               <div className=\"control\">\n                                   <button className=\"button is-link\">Login</button>\n                               </div>\n                           </div>\n                       </form>\n                   </div>\n               </div>\n           </section>\n\n        )\n    }\n}\n\nexport default Login","import React from '../node_modules/react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <h1>GAGTOON</h1>\n      <Login/> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from '../node_modules/react';\nimport ReactDOM from '../node_modules/react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}